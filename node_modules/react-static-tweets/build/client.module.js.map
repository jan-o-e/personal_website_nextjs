{"version":3,"file":"client.module.js","sources":["../src/twitter.tsx","../src/html/handlers.tsx","../src/html/node.tsx","../src/twitter-layout/components/containers.tsx","../src/twitter-layout/components/headings.tsx","../src/twitter-layout/components/text.tsx","../src/twitter-layout/components/code.tsx","../src/twitter-layout/components/anchor.tsx","../src/twitter-layout/components/lists.tsx","../src/twitter-layout/components/table.tsx","../src/twitter-layout/components/media.tsx","../src/twitter-layout/components/twitter.tsx","../src/twitter-layout/components/tweet/tweet-header.tsx","../src/format-number.ts","../src/twitter-layout/components/tweet/tweet-info.tsx","../src/twitter-layout/components/tweet/tweet.tsx","../src/twitter-layout/components/embedded-tweet.tsx","../src/twitter-layout/components/index.ts","../src/tweet.tsx","../src/tweet-client.tsx"],"sourcesContent":["import React, { createContext, ReactNode, useContext } from 'react'\n\n// TODO: make this more specific\nexport type TweetAst = Array<any>\n\nexport type TwitterContextValue = {\n  // static tweet ast info\n  tweetAstMap: TweetAstMap\n}\n\nexport type TweetAstMap = {\n  [tweetId: string]: TweetAst\n}\n\nexport interface TwitterContextProviderProps {\n  value: Partial<TwitterContextValue>\n  children?: ReactNode\n}\n\n// Saves the tweets returned as props to the page\nconst TwitterContext = createContext<TwitterContextValue>({\n  tweetAstMap: {}\n})\n\nexport function useTwitterContext() {\n  return useContext(TwitterContext)\n}\n\n// allows partials that override outer providers\nexport function TwitterContextProvider({\n  value,\n  children\n}: TwitterContextProviderProps) {\n  const currentContext = useContext(TwitterContext)\n  const { tweetAstMap, ...rest } = value\n  const mergedContext = {\n    ...currentContext,\n    ...rest,\n    tweetAstMap: {\n      ...currentContext.tweetAstMap,\n      ...tweetAstMap\n    }\n  }\n\n  return (\n    <TwitterContext.Provider value={mergedContext}>\n      {children}\n    </TwitterContext.Provider>\n  )\n}\n\nexport const TwitterContextConsumer = TwitterContext.Consumer\n","import React from 'react'\n\nfunction getContainerClassName(dataType) {\n  if (!dataType) return\n\n  const [type, count] = dataType.split(' ')\n\n  switch (type) {\n    case 'image-container':\n      return `image-container image-count-${count}`\n    case 'gif-container':\n    case 'video-container':\n      return type\n  }\n}\n\nexport default {\n  div(props, components, i) {\n    const { data } = props\n    const type = props.dataType || (data && data.type)\n\n    if (type === 'tweet') {\n      return (\n        <components.Tweet key={i} data={data}>\n          {props.children}\n        </components.Tweet>\n      )\n    }\n\n    if (type === 'poll-container') {\n      return <components.Poll key={i} data={data} />\n    }\n\n    const className = getContainerClassName(type)\n\n    return (\n      <components.div key={i} className={className} data={data}>\n        {props.children}\n      </components.div>\n    )\n  },\n\n  img({ dataType, ...props }, components, i) {\n    if (dataType === 'emoji-for-text') {\n      return <components.Emoji key={i} src={props.src} alt={props.alt} />\n    }\n\n    if (dataType === 'media-image') {\n      return <components.img key={i} {...props} />\n    }\n\n    return null\n  },\n\n  a(props, components, i) {\n    const type = props.dataType\n\n    if (type === 'mention') {\n      return (\n        <components.Mention\n          key={i}\n          href={props.href}\n          children={props.children}\n        />\n      )\n    }\n\n    if (type === 'hashtag') {\n      return (\n        <components.Hashtag\n          key={i}\n          href={props.href}\n          children={props.children}\n        />\n      )\n    }\n\n    if (type === 'cashtag') {\n      return (\n        <components.Cashtag\n          key={i}\n          href={props.href}\n          children={props.children}\n        />\n      )\n    }\n\n    if (type === 'quote-tweet') {\n      return <components.EmbeddedTweet key={i} href={props.href} />\n    }\n\n    return (\n      <components.a key={i} href={props.href} title={props.title}>\n        {props.children}\n      </components.a>\n    )\n  },\n\n  blockquote(props, components, i) {\n    if (process.env.NEXT_PUBLIC_TWITTER_LOAD_WIDGETS === 'true') {\n      const isEmbeddedTweet = props.className?.includes('twitter-tweet')\n\n      if (isEmbeddedTweet) {\n        return <components.EmbeddedTweet {...props} />\n      }\n    } else {\n      const ast = props.data?.ast\n\n      if (ast) {\n        return <components.EmbeddedTweet key={i} ast={ast[0]} />\n      }\n    }\n\n    return <components.Blockquote key={i} children={props.children} />\n  }\n}\n","import React from 'react'\nimport handlers from './handlers'\n\nconst defaultHandler = (name) => (props, components) => {\n  const Comp = components[name]\n  return Comp ? <Comp {...props} /> : React.createElement(name, props)\n}\n\nfunction handleNode(node, components, i = undefined) {\n  if (!node) {\n    return null\n  }\n\n  if (typeof node === 'string') {\n    return node\n  }\n\n  const handler = handlers[node.tag] || defaultHandler(node.tag)\n\n  if (!handler) {\n    console.error('tweet error missing handler for:', node)\n    return null\n  }\n\n  const { nodes } = node\n  const props = { ...node.props, key: i }\n\n  // Always send className as a string\n  if (props.className && Array.isArray(props.className)) {\n    props.className = props.className.join(' ')\n  }\n\n  if (node.data) {\n    props.data = node.data\n  }\n\n  if (nodes && Array.isArray(nodes)) {\n    props.children = nodes.map((node, i) => handleNode(node, components, i))\n  }\n\n  const element = handler(props, components, i, node)\n\n  if (!element) {\n    console.error('A handler returned null for:', node)\n  }\n\n  return element\n}\n\nexport default function Node({ components, node }) {\n  return handleNode(node, components)\n}\n","import React from 'react'\n\nexport const Div = (p) => <div className={p.className}>{p.children}</div>\n","import React from 'react'\n\nconst Permalink = ({ children, id }) => (\n  <span className='static-tweet-permalink'>\n    <span id={id}></span>\n    <a href={`#${id}`}>{children}</a>\n    <span className='permalink'>#</span>\n  </span>\n)\n\nexport const H1 = (p) => (\n  <h1 className='static-tweet-h1'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h1>\n)\n\nexport const H2 = (p) => (\n  <h2 className='static-tweet-h2'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h2>\n)\n\nexport const H3 = (p) => (\n  <h3 className='static-tweet-h3'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h3>\n)\n\nexport const H4 = (p) => (\n  <h4 className='static-tweet-h4'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h4>\n)\n\nexport const H5 = (p) => (\n  <h5 className='static-tweet-h5'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h5>\n)\n\nexport const H6 = (p) => (\n  <h6 className='static-tweet-h6'>\n    <Permalink id={p.data.id}>{p.children}</Permalink>\n  </h6>\n)\n","import React from 'react'\nimport cs from 'clsx'\n\nexport const P = ({ className = undefined, ...p }) => (\n  <p className='static-tweet-p' {...p} />\n)\n\nexport const Blockquote = ({ className = undefined, ...p }) => (\n  <blockquote className={cs('static-tweet-blockquote', className)} {...p} />\n)\n\nexport const Hr = ({ className = undefined, ...p }) => (\n  <hr className={cs('static-tweet-hr', className)} {...p} />\n)\n","import React from 'react'\n\nexport const Code = (p) => <code {...p} />\n\nexport const Pre = (p) => <pre {...p} />\n","import React from 'react'\nimport cs from 'clsx'\n\nconst PROTOCOL = /^(https?:|)\\/\\//\n\nconst beautifyHref = (href) => {\n  const text = href.replace(PROTOCOL, '')\n  const i = text.indexOf('/')\n\n  if (i === -1) return text\n  // Remove trailing slash\n  if (i === text.length - 1) {\n    return text.substring(0, i)\n  }\n\n  const hostname = text.substring(0, i)\n  const pathname = text.substring(i)\n\n  // Hide large paths similarly to how twitter does it\n  return pathname.length > 20\n    ? `${hostname}${pathname.substring(0, 15)}...`\n    : text\n}\n\nexport const A = (p) => (\n  <a\n    href={p.href}\n    target='_blank'\n    rel='noopener noreferrer'\n    title={p.title || p.href}\n    className={cs('static-tweet-anchor', p.className)}\n  >\n    {p.children[0] === p.href ? beautifyHref(p.href) : p.children}\n  </a>\n)\n","import React from 'react'\n\nexport const Ul = (p) => <ul {...p} />\n\nexport const Ol = (p) => <ol {...p} />\n\nexport const Li = (p) => <li {...p} />\n","import React from 'react'\n\nexport const Table = (p) => (\n  <div className='table-container'>\n    <table {...p} />\n  </div>\n)\n\nexport const Th = (p) => <th {...p} />\n\nexport const Td = (p) => <td {...p} />\n","import React from 'react'\nimport Image from 'next/image'\n\nexport const Img = ({ width, height, src, dataUrl, ...p }) => {\n  const image = (\n    <Image\n      {...p}\n      src={`${src}&name=small`}\n      quality={80}\n      alt={`Tweet image ${src}`}\n      fill\n      sizes='100vw'\n      style={{\n        objectFit: 'cover'\n      }}\n    />\n  )\n\n  return (\n    <details className='static-tweet-details'>\n      <summary\n        className='static-tweet-summary'\n        style={{\n          paddingBottom: `${(height / width) * 100 || 0}%`\n        }}\n      >\n        {dataUrl ? (\n          <a\n            href={dataUrl}\n            className='avatar'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            {image}\n          </a>\n        ) : (\n          <div className='avatar'>{image}</div>\n        )}\n      </summary>\n    </details>\n  )\n}\n","import React, { Fragment } from 'react'\nimport cs from 'clsx'\n\nimport formatDistanceStrict from 'date-fns/formatDistanceStrict'\n\nexport const TwitterLink = (p) => (\n  <a\n    href={p.href}\n    target='_blank'\n    rel='noopener noreferrer'\n    title={p.title || p.href}\n    className='static-tweet-twitter-link'\n  >\n    <s>{p.type}</s>\n\n    {p.children}\n  </a>\n)\n\nexport const Mention = (p) => (\n  <TwitterLink href={p.href} type='@'>\n    {p.children[0].replace(/^@/, '')}\n  </TwitterLink>\n)\n\nexport const Hashtag = (p) => (\n  <TwitterLink href={p.href} type='#'>\n    {p.children[0].replace(/^\\#/, '')}\n  </TwitterLink>\n)\n\nexport const Cashtag = (p) => (\n  <TwitterLink href={p.href} type='$'>\n    {p.children[0].replace(/^\\$/, '')}\n  </TwitterLink>\n)\n\nexport const Emoji = ({ className, ...p }) => (\n  <img className={cs('static-tweet-emoji', className)} {...p} />\n)\n\n// Note: Poll data is most likely cached, so ongoing polls will not be updated\n// until a revalidation happens\nexport const Poll = ({ data }) => {\n  const votesCount = data.options.reduce(\n    (count, option) => count + option.votes,\n    0\n  )\n  const endsAt = new Date(data.endsAt)\n  const now = new Date()\n\n  return (\n    <div className='static-tweet-poll'>\n      <div className='static-tweet-options'>\n        {data.options.map((option) => {\n          const per = Math.round((option.votes / votesCount) * 100) || 0\n          const width = per || 1 + '%'\n          const widthLabel = per + '%'\n\n          return (\n            <Fragment key={option.position}>\n              <span className='static-tweet-label'>{option.label}</span>\n              <span className='static-tweet-chart' style={{ width }}></span>\n              <span>{widthLabel}</span>\n            </Fragment>\n          )\n        })}\n      </div>\n      <hr />\n      <div className='static-tweet-footer'>\n        <span className='static-tweet-votes-count'>{votesCount} votes</span>\n        <span>\n          {now > endsAt\n            ? 'Final results'\n            : `${formatDistanceStrict(endsAt, now)} left`}\n        </span>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Image from 'next/image'\n\nexport default function TweetHeader({ tweet }) {\n  const authorUrl = `https://twitter.com/${tweet.username}`\n  const tweetUrl = `https://twitter.com/${tweet.username}/status/${tweet.id}`\n  const avatar = tweet.avatar.normal\n\n  return (\n    <div className='static-tweet-header'>\n      <a\n        href={authorUrl}\n        className='static-tweet-header-avatar'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <Image\n          className='static-tweet-header-rounded'\n          src={avatar}\n          alt={tweet.name}\n          height={36}\n          width={36}\n        />\n      </a>\n\n      <a\n        href={authorUrl}\n        className='static-tweet-header-author'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <span className='static-tweet-header-name' title={tweet.name}>\n          {tweet.name}\n        </span>\n\n        <span\n          className='static-tweet-header-username'\n          title={`@${tweet.username}`}\n        >\n          @{tweet.username}\n        </span>\n      </a>\n\n      <a\n        href={tweetUrl}\n        className='static-tweet-header-brand'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <div\n          className='static-tweet-header-icon-twitter'\n          title='View on Twitter'\n          role='img'\n        />\n      </a>\n    </div>\n  )\n}\n","export default function formatNumber(n) {\n  return n.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n","import React from 'react'\nimport cs from 'clsx'\nimport format from 'date-fns/format'\n\nimport formatNumber from '../../../format-number'\n\nexport default function TweetInfo({ tweet, className = undefined }) {\n  const likeUrl = `https://twitter.com/intent/like?tweet_id=${tweet.id}`\n  const tweetUrl = `https://twitter.com/${tweet.username}/status/${tweet.id}`\n  const createdAt = new Date(tweet.createdAt)\n\n  return (\n    <div className={cs('static-tweet-info', className)}>\n      <a\n        className='static-tweet-like'\n        href={likeUrl}\n        title='Like'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <div className='static-tweet-heart'>\n          <div\n            className='static-tweet-icon static-tweet-icon-heart'\n            role='img'\n          />\n        </div>\n\n        {(tweet.heartCount || tweet.likes > 0) && (\n          <span className='static-tweet-likes'>\n            {tweet.heartCount || formatNumber(tweet.likes)}\n          </span>\n        )}\n      </a>\n\n      {createdAt && (\n        <a\n          className='static-tweet-time'\n          href={tweetUrl}\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <time\n            title={`Time Posted: ${createdAt.toUTCString()}`}\n            dateTime={createdAt.toISOString()}\n          >\n            {format(createdAt, 'h:mm a - MMM d, y')}\n          </time>\n        </a>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TweetHeader from './tweet-header'\nimport TweetInfo from './tweet-info'\n\nexport default function Tweet({ children, data }) {\n  return (\n    <div className='static-tweet-body'>\n      <blockquote className='static-tweet-body-blockquote'>\n        <TweetHeader tweet={data} />\n        {children}\n        <TweetInfo tweet={data} />\n      </blockquote>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Node from '../../html/node'\nimport components from './index'\n\nexport default function EmbeddedTweet({ ast }) {\n  return <Node components={components} node={ast} />\n}\n","import { Div } from './containers'\nimport { H1, H2, H3, H4, H5, H6 } from './headings'\nimport { P, Blockquote, Hr } from './text'\nimport { Code, Pre } from './code'\nimport { A } from './anchor'\nimport { Ul, Ol, Li } from './lists'\nimport { Table, Th, Td } from './table'\nimport { Img } from './media'\nimport { Mention, Hashtag, Cashtag, Emoji, Poll } from './twitter'\nimport Tweet from './tweet/tweet'\nimport EmbeddedTweet from './embedded-tweet'\n\nexport default {\n  div: Div,\n\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n\n  p: P,\n  blockquote: Blockquote,\n  hr: Hr,\n\n  code: Code,\n  pre: Pre,\n\n  a: A,\n\n  ul: Ul,\n  ol: Ol,\n  li: Li,\n\n  table: Table,\n  th: Th,\n  td: Td,\n\n  img: Img,\n\n  Mention,\n  Hashtag,\n  Cashtag,\n  Emoji,\n  Poll,\n\n  Tweet,\n  EmbeddedTweet\n}\n","import React, { forwardRef } from 'react'\nimport cs from 'clsx'\n\nimport Node from './html/node'\nimport components from './twitter-layout/components'\n\ninterface TweetProps {\n  ast: any\n  caption?: string\n  className?: string\n  // TODO: understand what br is used for\n  // br?: string\n}\n\nconst Tweet = forwardRef<HTMLElement, TweetProps>(\n  ({ ast, caption, className }: TweetProps, ref) => {\n    if (!ast?.length) {\n      return null\n    }\n\n    return (\n      <article ref={ref} className={cs('static-tweet', className)}>\n        <Node components={components} node={ast[0]} />\n\n        {caption && <p className='static-tweet-caption'>{caption}</p>}\n      </article>\n    )\n  }\n)\n\nexport { Tweet }\n","import React, { forwardRef } from 'react'\nimport cs from 'clsx'\n\nimport { useTwitterContext } from './twitter'\nimport Node from './html/node'\nimport components from './twitter-layout/components'\n\ninterface TweetProps {\n  id: string\n  ast?: any\n  caption?: string\n  className?: string\n  // TODO: understand what br is used for\n  // br?: string\n}\n\nconst TweetClient = forwardRef<HTMLElement, TweetProps>(\n  ({ id, ast, caption, className }: TweetProps, ref) => {\n    const twitter = useTwitterContext()\n    const tweetAst = ast || twitter.tweetAstMap[id]\n    if (!tweetAst) {\n      return null\n    }\n\n    return (\n      <article ref={ref} className={cs('static-tweet', className)}>\n        {tweetAst && (\n          <>\n            <Node components={components} node={tweetAst[0]} />\n\n            {caption && <p className='static-tweet-caption'>{caption}</p>}\n          </>\n        )}\n      </article>\n    )\n  }\n)\n\nexport { TweetClient }\n"],"names":["TwitterContext","createContext","tweetAstMap","useTwitterContext","useContext","TwitterContextProvider","value","children","currentContext","rest","_excluded","mergedContext","React","createElement","Provider","TwitterContextConsumer","Consumer","getContainerClassName","dataType","split","type","count","div","props","components","i","data","Tweet","key","Poll","className","img","Emoji","src","alt","a","Mention","href","Hashtag","Cashtag","EmbeddedTweet","title","blockquote","process","env","NEXT_PUBLIC_TWITTER_LOAD_WIDGETS","isEmbeddedTweet","includes","ast","Blockquote","defaultHandler","name","Comp","handleNode","node","undefined","handler","handlers","tag","console","error","nodes","Array","isArray","join","map","element","Node","Div","p","Permalink","id","H1","H2","H3","H4","H5","H6","P","cs","Hr","Code","Pre","PROTOCOL","beautifyHref","text","replace","indexOf","length","substring","hostname","pathname","A","target","rel","Ul","Ol","Li","Table","Th","Td","Img","width","height","dataUrl","image","Image","quality","fill","sizes","style","objectFit","paddingBottom","TwitterLink","votesCount","options","reduce","option","votes","endsAt","Date","now","per","Math","round","widthLabel","Fragment","position","label","formatDistanceStrict","TweetHeader","tweet","authorUrl","username","tweetUrl","avatar","normal","role","formatNumber","n","toString","TweetInfo","likeUrl","createdAt","heartCount","likes","toUTCString","dateTime","toISOString","format","h1","h2","h3","h4","h5","h6","hr","code","pre","ul","ol","li","table","th","td","forwardRef","ref","caption","TweetClient","twitter","tweetAst"],"mappings":"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"}